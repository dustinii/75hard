<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>75 Hard Challenge Tracker</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
            color: #333;
            line-height: 1.6;
        }
        .container {
            max-width: 800px;
            margin: auto;
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h1 {
            text-align: center;
            color: #333;
            margin-bottom: 20px;
        }
        h2 {
            color: #555;
            border-bottom: 1px solid #eee;
            padding-bottom: 10px;
            margin-top: 30px;
        }
        .task-list {
            list-style: none;
            padding: 0;
        }
        .task-list li {
            margin-bottom: 15px;
            background: #f9f9f9;
            padding: 10px;
            border-radius: 5px;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        .task-list label {
            margin-left: 10px;
            flex-grow: 1;
        }
        input[type="checkbox"] {
            transform: scale(1.2);
            margin-right: 10px;
        }
        input[type="text"],
        textarea {
            width: calc(100% - 22px);
            padding: 10px;
            margin-top: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        textarea {
            height: 80px;
            resize: vertical;
        }
        .day-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(50px, 1fr));
            gap: 10px;
            margin-top: 20px;
        }
        .day-square {
            background-color: #e0e0e0;
            color: #333;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 4px;
            cursor: pointer;
            font-weight: bold;
            transition: background-color 0.3s ease;
        }
        .day-square.completed {
            background-color: #4CAF50;
            color: white;
        }
        .day-square.failed {
            background-color: #f44336;
            color: white;
        }
        .status-buttons {
            margin-top: 10px;
            display: flex;
            gap: 10px;
        }
        .status-buttons button {
            padding: 8px 12px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
        }
        .complete-btn {
            background-color: #4CAF50;
            color: white;
        }
        .fail-btn {
            background-color: #f44336;
            color: white;
        }
        .reset-btn {
            background-color: #ff9800;
            color: white;
        }
        .notes-section {
            margin-top: 20px;
        }
        .current-day-display {
            text-align: center;
            font-size: 1.5em;
            margin-bottom: 20px;
            font-weight: bold;
        }
        .rules {
            background-color: #eef;
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
        }
        .rules ul {
            padding-left: 20px;
        }
        .rules li {
            margin-bottom: 5px;
        }
        .footer {
            text-align: center;
            margin-top: 30px;
            font-size: 0.9em;
            color: #777;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>75 Hard Challenge Tracker üí™</h1>

        <div class="rules">
            <h2>Challenge Rules:</h2>
            <ul>
                <li>Follow a diet (any diet, no cheat meals).</li>
                <li>No alcohol.</li>
                <li>Two 45-minute workouts per day. One MUST be outdoors.</li>
                <li>Drink 1 gallon (3.78 liters) of water daily.</li>
                <li>Read 10 pages of a non-fiction, entrepreneurial, or self-help book daily.</li>
                <li>Take a progress picture daily.</li>
            </ul>
            <p><strong>If you miss ANY task, you must start over from Day 1.</strong></p>
        </div>

        <div class="current-day-display">
            Current Day: <span id="currentDayDisplay">1</span>
        </div>

        <h2>Daily Tasks for Day <span id="dailyTaskDay">1</span>:</h2>
        <ul class="task-list" id="taskList">
            <li>
                <input type="checkbox" id="task1" name="task1">
                <label for="task1">Workout 1 (45 mins)</label>
            </li>
            <li>
                <input type="checkbox" id="task2" name="task2">
                <label for="task2">Workout 2 (45 mins - OUTDOORS üå≥)</label>
            </li>
            <li>
                <input type="checkbox" id="task3" name="task3">
                <label for="task3">Follow Diet (No Cheat Meals)</label>
                <input type="text" id="dietPlan" placeholder="My Diet Plan (e.g., Keto, Paleo, Clean Eating)">
            </li>
            <li>
                <input type="checkbox" id="task4" name="task4">
                <label for="task4">No Alcohol üö±</label>
            </li>
            <li>
                <input type="checkbox" id="task5" name="task5">
                <label for="task5">Drink 1 Gallon of Water üíß</label>
            </li>
            <li>
                <input type="checkbox" id="task6" name="task6">
                <label for="task6">Read 10 Pages of Non-Fiction üìö</label>
                <input type="text" id="bookTitle" placeholder="Current Book Title">
            </li>
            <li>
                <input type="checkbox" id="task7" name="task7">
                <label for="task7">Take Progress Picture üì∏</label>
            </li>
        </ul>

        <div class="status-buttons">
            <button class="complete-btn" onclick="markDayComplete()">Mark Day <span id="markCompleteDay">1</span> Complete ‚úÖ</button>
            <button class="fail-btn" onclick="markDayFailed()">Mark Day <span id="markFailDay">1</span> Failed ‚ùå</button>
        </div>
         <button class="reset-btn" onclick="resetDailyTasks()" style="margin-top:10px;">Reset Today's Tasks</button>

        <h2>Progress Grid (75 Days):</h2>
        <div class="day-grid" id="dayGrid">
            </div>

        <div class="notes-section">
            <h2>Daily Notes/Reflections for Day <span id="notesDay">1</span>:</h2>
            <textarea id="dailyNotes" placeholder="How did today go? Any challenges or wins?"></textarea>
            <button onclick="saveNotes()" style="margin-top:10px; padding: 8px 12px; background-color: #2196F3; color: white; border: none; border-radius: 4px;">Save Notes for Day <span id="saveNotesButtonDay">1</span></button>
        </div>

        <h2>Overall Challenge Management:</h2>
        <button class="reset-btn" onclick="resetChallengeConfirmation()" style="background-color: #d32f2f; margin-top:10px;">‚ö†Ô∏è Reset Entire Challenge ‚ö†Ô∏è</button>


        <div class="footer">
            <p>Good luck with your 75 Hard Challenge! Remember, it's a mental toughness program.</p>
            <p id="currentDate"></p>
        </div>
    </div>

    <script>
        const totalDays = 75;
        let currentDay = 1;
        let challengeData = {}; // To store status and notes for each day

        const currentDayDisplay = document.getElementById('currentDayDisplay');
        const dailyTaskDay = document.getElementById('dailyTaskDay');
        const markCompleteDay = document.getElementById('markCompleteDay');
        const markFailDay = document.getElementById('markFailDay');
        const notesDay = document.getElementById('notesDay');
        const saveNotesButtonDay = document.getElementById('saveNotesButtonDay');
        const dayGrid = document.getElementById('dayGrid');
        const taskList = document.getElementById('taskList');
        const dailyNotes = document.getElementById('dailyNotes');
        const dietPlanInput = document.getElementById('dietPlan');
        const bookTitleInput = document.getElementById('bookTitle');
        const checkboxes = taskList.querySelectorAll('input[type="checkbox"]');

        function updateDayDisplays() {
            currentDayDisplay.textContent = currentDay;
            dailyTaskDay.textContent = currentDay;
            markCompleteDay.textContent = currentDay;
            markFailDay.textContent = currentDay;
            notesDay.textContent = currentDay;
            saveNotesButtonDay.textContent = currentDay;
        }

        function generateDayGrid() {
            dayGrid.innerHTML = ''; // Clear existing grid
            for (let i = 1; i <= totalDays; i++) {
                const daySquare = document.createElement('div');
                daySquare.classList.add('day-square');
                daySquare.textContent = i;
                daySquare.dataset.day = i;
                if (challengeData[i]) {
                    if (challengeData[i].status === 'completed') {
                        daySquare.classList.add('completed');
                    } else if (challengeData[i].status === 'failed') {
                        daySquare.classList.add('failed');
                    }
                }
                daySquare.onclick = () => navigateToDay(i);
                dayGrid.appendChild(daySquare);
            }
        }

        function navigateToDay(dayNumber) {
            currentDay = dayNumber;
            updateDayDisplays();
            loadDayData(dayNumber);
            window.scrollTo({ top: 0, behavior: 'smooth' });
        }

        function allTasksChecked() {
            for (let checkbox of checkboxes) {
                if (!checkbox.checked) return false;
            }
            return true;
        }

        function markDayComplete() {
            if (!allTasksChecked()) {
                alert("Please complete all daily tasks before marking the day as complete.");
                return;
            }
            updateDayStatus(currentDay, 'completed');
            if (currentDay < totalDays) {
                currentDay++;
            } else {
                alert("Congratulations! You've completed the 75 Hard Challenge! üéâ");
            }
            updateDayDisplays();
            resetDailyTasks(); // Reset for the new current day
            loadDayData(currentDay); // Load data for the new current day (which will be empty)
            saveChallengeData();
        }

        function markDayFailed() {
            if (confirm(`Are you sure you want to mark Day ${currentDay} as failed? This means you'll need to restart the challenge from Day 1 if you wish to complete it according to the rules.`)) {
                updateDayStatus(currentDay, 'failed');
                // According to 75 Hard rules, failure means starting over.
                // However, this tracker will allow marking a day as failed without auto-resetting
                // to allow for tracking attempts or personal variations.
                // A separate "Reset Entire Challenge" button handles full reset.
                alert(`Day ${currentDay} marked as failed. Remember the rules: official failure means starting over from Day 1.`);
                saveChallengeData();
            }
        }

        function updateDayStatus(day, status) {
            if (!challengeData[day]) challengeData[day] = {};
            challengeData[day].status = status;
            const daySquare = dayGrid.querySelector(`.day-square[data-day='${day}']`);
            if (daySquare) {
                daySquare.classList.remove('completed', 'failed');
                if (status === 'completed') daySquare.classList.add('completed');
                else if (status === 'failed') daySquare.classList.add('failed');
            }
        }

        function resetDailyTasks() {
            checkboxes.forEach(checkbox => checkbox.checked = false);
            // We don't clear diet plan or book title as they might persist
        }

        function saveNotes() {
            const notes = dailyNotes.value;
            const diet = dietPlanInput.value;
            const book = bookTitleInput.value;
            if (!challengeData[currentDay]) challengeData[currentDay] = {};
            challengeData[currentDay].notes = notes;
            challengeData[currentDay].dietPlan = diet;
            challengeData[currentDay].bookTitle = book;
            challengeData[currentDay].tasks = {};
            checkboxes.forEach(cb => {
                challengeData[currentDay].tasks[cb.id] = cb.checked;
            });
            saveChallengeData();
            alert(`Notes and task status for Day ${currentDay} saved!`);
        }

        function loadDayData(day) {
            resetDailyTasks(); // Clear previous day's checks
            dailyNotes.value = ''; // Clear notes field
            // Don't clear diet/book by default, only if loading specific day's saved data
            // dietPlanInput.value = '';
            // bookTitleInput.value = '';


            if (challengeData[day]) {
                dailyNotes.value = challengeData[day].notes || '';
                dietPlanInput.value = challengeData[day].dietPlan || (challengeData[day-1]?.dietPlan || ''); // Carry over from previous day if not set
                bookTitleInput.value = challengeData[day].bookTitle || (challengeData[day-1]?.bookTitle || ''); // Carry over
                if (challengeData[day].tasks) {
                    checkboxes.forEach(cb => {
                        cb.checked = challengeData[day].tasks[cb.id] || false;
                    });
                }
            } else {
                // If no data for this day, try to carry over diet/book from previous day
                if (challengeData[day-1]) {
                    dietPlanInput.value = challengeData[day-1].dietPlan || '';
                    bookTitleInput.value = challengeData[day-1].bookTitle || '';
                } else {
                    dietPlanInput.value = '';
                    bookTitleInput.value = '';
                }
            }
        }

        function saveChallengeData() {
            localStorage.setItem('75HardChallengeData', JSON.stringify(challengeData));
            localStorage.setItem('75HardCurrentDay', currentDay.toString());
            generateDayGrid(); // Re-generate grid to reflect any status changes
        }

        function loadChallengeData() {
            const savedData = localStorage.getItem('75HardChallengeData');
            const savedDay = localStorage.getItem('75HardCurrentDay');
            if (savedData) {
                challengeData = JSON.parse(savedData);
            }
            if (savedDay) {
                currentDay = parseInt(savedDay, 10);
                if (isNaN(currentDay) || currentDay < 1 || currentDay > totalDays) {
                    currentDay = 1;
                }
            }
            updateDayDisplays();
            generateDayGrid();
            loadDayData(currentDay); // Load data for the current day after loading all data
        }

        function resetChallengeConfirmation() {
            if (confirm("‚ö†Ô∏è WARNING! This will reset ALL your progress for the 75 Hard Challenge, including all daily statuses and notes. Are you absolutely sure you want to start over from Day 1?")) {
                resetEntireChallenge();
            }
        }

        function resetEntireChallenge() {
            challengeData = {};
            currentDay = 1;
            localStorage.removeItem('75HardChallengeData');
            localStorage.removeItem('75HardCurrentDay');
            updateDayDisplays();
            generateDayGrid();
            resetDailyTasks();
            dailyNotes.value = '';
            dietPlanInput.value = '';
            bookTitleInput.value = '';
            alert("Challenge has been reset to Day 1.");
            loadDayData(currentDay);
        }

        // Set current date in footer
        document.getElementById('currentDate').textContent = `Today is: ${new Date().toLocaleDateString()}`;

        // Initialize
        loadChallengeData();

    </script>
</body>
</html>
